--- sphinx-2.0.6-release/src/sphinxsearch.cpp	2012-10-09 11:00:45.000000000 +0100
+++ sphinx-2.0.6-release-patched/src/sphinxsearch.cpp	2013-08-15 14:03:24.406187000 +0100
@@ -4952,7 +4952,8 @@
 	XRANK_DOC_WORD_COUNT,
 
 	// field aggregation functions
-	XRANK_SUM
+	XRANK_SUM,
+	XRANK_TOP
 };
 
 
@@ -5069,6 +5070,55 @@
 };
 
 
+/// function that returns the maximum value of sub-expressions over matched fields
+struct Expr_Top_c : public ISphExpr
+{
+	RankerState_Expr_fn *	m_pState;
+	ISphExpr *				m_pArg;
+
+	Expr_Top_c ( RankerState_Expr_fn * pState, ISphExpr * pArg )
+		: m_pState ( pState )
+		, m_pArg ( pArg )
+	{}
+
+	float Eval ( const CSphMatch & tMatch ) const
+	{
+		m_pState->m_iCurrentField = 0;
+		float fRes = 0;
+		float fSubRes = 0;
+		DWORD uMask = m_pState->m_uMatchedFields;
+		while ( uMask )
+		{
+			if ( uMask & 1 )
+				fSubRes = m_pArg->Eval ( tMatch );
+			if ( fSubRes > fRes )
+				fRes = fSubRes;
+			uMask >>= 1;
+			m_pState->m_iCurrentField++;
+		}
+		return fRes;
+	}
+
+	int IntEval ( const CSphMatch & tMatch ) const
+	{
+		m_pState->m_iCurrentField = 0;
+		int iRes = 0;
+		int iSubRes = 0;
+		DWORD uMask = m_pState->m_uMatchedFields;
+		while ( uMask )
+		{
+			if ( uMask & 1 )
+				iSubRes = m_pArg->IntEval ( tMatch );
+			if ( iSubRes > iRes )
+				iRes = iSubRes;
+			uMask >>= 1;
+			m_pState->m_iCurrentField++;
+		}
+		return iRes;
+	}
+};
+
+
 // FIXME! cut/pasted from sphinxexpr; remove dupe
 struct Expr_GetIntConst_c : public ISphExpr
 {
@@ -5132,6 +5182,8 @@
 	{
 		if ( !strcasecmp ( sFunc, "sum" ) )
 			return XRANK_SUM;
+		if ( !strcasecmp ( sFunc, "top" ) )
+			return XRANK_TOP;
 		if ( !strcasecmp ( sFunc, "max_window_hits" ) )
 			return XRANK_MAX_WINDOW_HITS;
 		return -1;
@@ -5164,6 +5216,7 @@
 			case XRANK_DOC_WORD_COUNT:		return new Expr_IntPtr_c ( &m_pState->m_uDocWordCount );
 
 			case XRANK_SUM:					return new Expr_Sum_c ( m_pState, pLeft );
+			case XRANK_TOP:					return new Expr_Top_c ( m_pState, pLeft );
 			default:						return NULL;
 		}
 	}
@@ -5206,6 +5259,14 @@
 				}
 				return dArgs[0];
 
+			case XRANK_TOP:
+				if ( dArgs.GetLength()!=1 )
+				{
+					sError = "TOP() requires 1 argument";
+					return SPH_ATTR_NONE;
+				}
+				return dArgs[0];
+
 			case XRANK_MAX_WINDOW_HITS:
 				if ( dArgs.GetLength()!=1 || dArgs[0]!=SPH_ATTR_INTEGER || !bAllConst )
 				{
@@ -5239,6 +5300,7 @@
 				break;
 
 			case XRANK_SUM:
+			case XRANK_TOP:
 				if ( m_bCheckInFieldAggr )
 					m_sCheckError = "field aggregates can not be nested in ranking expression";
 				else
@@ -5253,7 +5315,7 @@
 
 	void CheckExit ( int iID )
 	{
-		if ( !m_sCheckError && iID==XRANK_SUM )
+		if ( !m_sCheckError && ( iID==XRANK_SUM || iID==XRANK_TOP ) )
 		{
 			assert ( m_bCheckInFieldAggr );
 			m_bCheckInFieldAggr = false;
